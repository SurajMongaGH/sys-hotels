<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="inteface-suite.xml" />
	<munit:test name="GET_Hotels_GET:\soapkit-config-test" doc:id="6d256a06-980b-453f-86eb-4e483ac27dbe" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock getHotels" doc:id="5a02dea3-561f-4e1f-8b0c-af35be9e5789" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="0d8e32d5-18fd-4be9-bdd2-0e8fcd64b71e" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://GETHotelsGETsoapkitconfigtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="data" value="#[output application/json --- readUrl('classpath://GETHotelsGETsoapkitconfigtest\mock_variable_.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="place" value="#[output application/java --- readUrl('classpath://GETHotelsGETsoapkitconfigtest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="d79d082e-1dc1-47f5-9836-845b2248a179" >
				<munit:payload value="#[output application/java --- readUrl('classpath://GETHotelsGETsoapkitconfigtest\set-event_payload.dwl')]" mediaType="application/java" />
				<munit:attributes value="#[output application/java --- readUrl('classpath://GETHotelsGETsoapkitconfigtest\set-event_attributes.dwl')]" mediaType="application/java" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to GET_Hotels_GET:\soapkit-config" doc:id="eb8d7fcd-5dd2-46e5-8a87-b512d43d0701" name="GET_Hotels_GET:\soapkit-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="b1a8eecc-eac3-4b17-966f-722a7f63323f" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import GETHotelsGETsoapkitconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="GET_Bookhotel_GET:\soapkit-config-test" doc:id="194336e1-4163-4fd4-b6be-c630f4a331e0" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock BookFlights" doc:id="5d33afee-3a10-4b63-9f64-636019bb3684" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="0bce1a70-7edb-47d5-8f38-6e3fc00b0b5d" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://GETBookhotelGETsoapkitconfigtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="date" value="#[output application/java --- readUrl('classpath://GETBookhotelGETsoapkitconfigtest\mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="place" value="#[output application/java --- readUrl('classpath://GETBookhotelGETsoapkitconfigtest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="number_of_rooms" value="#[output application/java --- readUrl('classpath://GETBookhotelGETsoapkitconfigtest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="d7da3321-55c8-4e49-b194-65f80a4300b1" >
				<munit:payload value="#[output application/java --- readUrl('classpath://GETBookhotelGETsoapkitconfigtest\set-event_payload.dwl')]" mediaType="application/java" />
				<munit:attributes value="#[output application/java --- readUrl('classpath://GETBookhotelGETsoapkitconfigtest\set-event_attributes.dwl')]" mediaType="application/java" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to GET_Bookhotel_GET:\soapkit-config" doc:id="884cda76-f74e-483a-ba40-1f3c29c60b02" name="GET_Bookhotel_GET:\soapkit-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="0955bf98-21b8-4e88-9687-386d1ee93ebf" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import GETBookhotelGETsoapkitconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="api-main-test" doc:id="e893b6a2-8359-4a20-b74c-e1e221b221f2" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock SOAP Router" doc:id="456df500-5c83-41aa-ae06-ddd2bdda8fe2" processor="apikit-soap:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="462253f4-4d94-4fdf-bc2c-ff9f0bd11b18" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output text/xml --- readUrl('classpath://apimaintest\mock_payload.dwl')]" mediaType="text/xml" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://apimaintest\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="date" value="#[output application/java --- readUrl('classpath://apimaintest\mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="place" value="#[output application/java --- readUrl('classpath://apimaintest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="number_of_rooms" value="#[output application/java --- readUrl('classpath://apimaintest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="d800c5ee-8c18-4a77-820b-c479e54cf6ff" >
				<munit:payload value="#[output text/xml --- readUrl('classpath://apimaintest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="text/xml" />
				<munit:attributes value="#[readUrl('classpath://apimaintest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to api-main" doc:id="0d3ea882-26d2-42ea-a32d-c2492c24c660" name="api-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="06879832-ab86-4879-bb72-ac282e67b018" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import apimaintest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
