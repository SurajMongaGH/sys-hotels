<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="implementation-suite.xml" />
	<munit:test name="getHotels-test" doc:id="4d6f91b0-9031-4242-b458-ceb1a4fe05ec" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Copy_of_Select" doc:id="e36960a7-17fa-4ad9-aa51-4549ebb07d4d" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2b98f021-e8a9-4789-99b4-cdfcdf4902b9" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getHotelstest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="place" value="#[output application/java --- readUrl('classpath://getHotelstest\mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Copy_of_Set Variable" doc:id="62203770-a7df-459b-a0ea-cf3877e22ed6" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="6f539e38-80cf-4dcc-9904-76fc7aa6416b" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="place" value="#[output application/java --- readUrl('classpath://getHotelstest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Copy_of_Set Variable" doc:id="4c85af3a-35bc-40fd-bf4e-08e620a707c2" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2167cbf4-2340-4e31-bd52-53a2e8210cc7" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="data" value="#[output application/json --- readUrl('classpath://getHotelstest\mock_variable_2.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="place" value="#[output application/java --- readUrl('classpath://getHotelstest\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="065dd47b-8567-4452-913e-5c688d8c3fd3" >
				<munit:payload value="#[output application/java --- readUrl('classpath://getHotelstest\set-event_payload.dwl')]" mediaType="application/java" />
				<munit:attributes value="#[output application/java --- readUrl('classpath://getHotelstest\set-event_attributes.dwl')]" mediaType="application/java" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getHotels" doc:id="449cf80e-9810-4ae4-ae6c-710ed7a74fad" name="getHotels"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="e5d3c9cd-7867-4e15-a8d3-32a3efb4380f" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getHotelstest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="getHotels-test1" doc:id="1950d469-c7cb-4d92-91ff-ecbdd221800c" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock  Select" doc:id="5374eb9e-a3bc-44d0-8d93-e9648b27a4db" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2b98f021-e8a9-4789-99b4-cdfcdf4902b9" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getHotelstest1\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="place" value="#[output application/java --- readUrl('classpath://getHotelstest1\mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="f7b02981-8d23-4ccc-b5ee-b56ff83f2de7" >
				<munit:payload value="#[output application/java --- readUrl('classpath://getHotelstest1\set-event_payload.dwl')]" mediaType="application/java" />
				<munit:attributes value="#[output application/java --- readUrl('classpath://getHotelstest1\set-event_attributes.dwl')]" mediaType="application/java" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getHotels" doc:id="9919ee79-5525-45e7-943e-440cd6e64497" name="getHotels"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="31137414-9f9d-4082-84fb-e7f77bc8fcb6" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getHotelstest1::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="bookhotel-test" doc:id="badc4820-81c5-40bb-9df7-72dbd69b862c" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock  Select" doc:id="0872723f-7c3e-4ca4-a521-cf8213c132ce" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="273658e3-d535-4339-9f36-a495c5018c68" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://bookhoteltest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="date" value="#[output application/java --- readUrl('classpath://bookhoteltest\mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="place" value="#[output application/java --- readUrl('classpath://bookhoteltest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="number_of_rooms" value="#[output application/java --- readUrl('classpath://bookhoteltest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="08da5863-a9d2-454f-9993-c5e2dd33875e" >
				<munit:payload value="#[output application/java --- readUrl('classpath://bookhoteltest\set-event_payload.dwl')]" mediaType="application/java" />
				<munit:attributes value="#[output application/java --- readUrl('classpath://bookhoteltest\set-event_attributes.dwl')]" mediaType="application/java" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to bookhotel" doc:id="7d1ddbf8-c0b5-4c85-8f08-8eea383eb200" name="bookhotel"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="b4ecfb75-5a86-4b92-984d-4b50e756f67a" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import bookhoteltest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="bookhotel-test1" doc:id="2875f0c7-ae9c-41c5-87a2-3d04503270ca" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock  Select" doc:id="bb16d4c0-4519-4dfe-925c-731bc2f01f73" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="273658e3-d535-4339-9f36-a495c5018c68" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://bookhoteltest1\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="date" value="#[output application/java --- readUrl('classpath://bookhoteltest1\mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="place" value="#[output application/java --- readUrl('classpath://bookhoteltest1\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="number_of_rooms" value="#[output application/java --- readUrl('classpath://bookhoteltest1\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock  Update" doc:id="22d5b378-6bc8-46d8-936d-c68dceac1316" processor="db:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="186d734b-08d4-48d9-bb72-ad0f69c99ad2" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://bookhoteltest1\mock_payload1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="date" value="#[output application/java --- readUrl('classpath://bookhoteltest1\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="place" value="#[output application/java --- readUrl('classpath://bookhoteltest1\mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="number_of_rooms" value="#[output application/java --- readUrl('classpath://bookhoteltest1\mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="f331c853-b2e3-41ec-9b28-d1a6f5146ca2" >
				<munit:payload value="#[output application/java --- readUrl('classpath://bookhoteltest1\set-event_payload.dwl')]" mediaType="application/java" />
				<munit:attributes value="#[output application/java --- readUrl('classpath://bookhoteltest1\set-event_attributes.dwl')]" mediaType="application/java" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to bookhotel" doc:id="76d9c914-3f4a-4c3b-bc88-0da9020cc5e5" name="bookhotel"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="b6023187-1941-45c3-bcce-8d469bfb1539" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import bookhoteltest1::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="DBError" doc:id="eef6a102-c9a9-44fc-bebe-2790c0fa5d45" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock  Select" doc:id="3077acdc-6402-45a2-9d09-b12b1705af3f" processor="db:select" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="273658e3-d535-4339-9f36-a495c5018c68" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="DB:CONNECTIVITY" />
					<munit-tools:variables >
						<munit-tools:variable key="date" value="#[output application/java --- readUrl('classpath://bookhoteltest\mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="place" value="#[output application/java --- readUrl('classpath://bookhoteltest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="number_of_rooms" value="#[output application/java --- readUrl('classpath://bookhoteltest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="b7ce31fa-45c6-418a-a2b5-94d606e16f63" >
				<munit:payload value="#[output application/java --- readUrl('classpath://bookhoteltest\set-event_payload.dwl')]" mediaType="application/java" />
				<munit:attributes value="#[output application/java --- readUrl('classpath://bookhoteltest\set-event_attributes.dwl')]" mediaType="application/java" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Copy_of_Flow-ref to bookhotel" doc:id="dc81fb4e-300e-4176-adcf-1e59fd22d216" name="bookhotel" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that" doc:id="80b18e30-f497-4507-8578-38dc279a9f60" expression="#[payload]" is='#[MunitTools::equalTo("Database connection issue")]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="bookhotel-test2" doc:id="1e0734a1-ff5e-4403-a268-c95c8895d30f" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock  Select" doc:id="85051773-e3c6-44be-88df-b379030b9bd8" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="273658e3-d535-4339-9f36-a495c5018c68" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://bookhoteltest2\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="date" value="#[output application/java --- readUrl('classpath://bookhoteltest2\mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="place" value="#[output application/java --- readUrl('classpath://bookhoteltest2\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="number_of_rooms" value="#[output application/java --- readUrl('classpath://bookhoteltest2\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="2cd3b9b6-c751-49e2-8511-5181f8c94149" >
				<munit:payload value="#[output application/java --- readUrl('classpath://bookhoteltest2\set-event_payload.dwl')]" mediaType="application/java" />
				<munit:attributes value="#[output application/java --- readUrl('classpath://bookhoteltest2\set-event_attributes.dwl')]" mediaType="application/java" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to bookhotel" doc:id="523b9db5-2365-4e51-b284-705a36a39e5e" name="bookhotel"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="b2202fb6-baba-46ee-9c5f-f61c4f635c34" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import bookhoteltest2::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="ANYError" doc:id="64278440-1d0c-458a-b71a-609245056042" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock  Select" doc:id="e579dfd7-2263-4e0f-9af7-7f448a6bdb21" processor="db:select" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="273658e3-d535-4339-9f36-a495c5018c68" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="ANY" />
					<munit-tools:variables >
						<munit-tools:variable key="date" value="#[output application/java --- readUrl('classpath://bookhoteltest\mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="place" value="#[output application/java --- readUrl('classpath://bookhoteltest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="number_of_rooms" value="#[output application/java --- readUrl('classpath://bookhoteltest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="4335d7f9-0479-4d83-bc4d-0c42d1336903" >
				<munit:payload value="#[output application/java --- readUrl('classpath://bookhoteltest\set-event_payload.dwl')]" mediaType="application/java" />
				<munit:attributes value="#[output application/java --- readUrl('classpath://bookhoteltest\set-event_attributes.dwl')]" mediaType="application/java" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to bookhotel" doc:id="6ada427a-f642-45b1-a693-f5c34c0269bf" name="bookhotel" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="26494816-a8c1-4ade-b479-3e91f3aaf39d" expression="#[payload]" is='#[MunitTools::equalTo("Internal Server Error")]' />
		</munit:validation>
	</munit:test>


</mule>
